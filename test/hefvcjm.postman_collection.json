{
    "info": {
        "_postman_id": "b13da54a-13c7-4f18-a5db-e9a22d5ef30a",
        "name": "hefvcjm",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "\u767b\u5f55",
            "item": [
                {
                    "name": "\u7528\u6237\u540d\u767b\u5f55",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "e0e4680f-3abe-4cc6-9681-0abb712d598d",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "d9a1e9a0-a03c-498b-8cb1-3aba1533a443",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'data': {'type': 'object'}, 'message': {'type': 'string'}, 'code': {'type': 'integer'}, 'success': {'type': 'boolean'}}, 'required': ['code', 'data', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a0\",function(){\n            pm.expect(pm.response.json().code).to.eql(0);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3atrue\",function(){\n            pm.expect(pm.response.json().success).to.eql(true);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u67e5\u8be2\u6210\u529f'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u67e5\u8be2\u6210\u529f');\n        });\n        \n        \n        pm.test(\"Body matches 'administrator'\", function () {\n            pm.expect(pm.response.text()).to.include(\"administrator\");\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/user/login?username=administrator&password=xA123456",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "user",
                                "login"
                            ],
                            "query": [
                                {
                                    "key": "username",
                                    "value": "administrator"
                                },
                                {
                                    "key": "password",
                                    "value": "xA123456"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "\u7528\u6237\u540d\u767b\u5f55-\u5bc6\u7801\u9519\u8bef",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "c38ccd02-89e4-4756-a95c-ed09bb57de76",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "7bae10df-a011-4507-9c2a-8de6d92327b6",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a2020\",function(){\n            pm.expect(pm.response.json().code).to.eql(2020);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3afalse\",function(){\n            pm.expect(pm.response.json().success).to.eql(false);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u5bc6\u7801\u9519\u8bef'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u5bc6\u7801\u9519\u8bef');\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/user/login?username=administrator&password=xA123446",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "user",
                                "login"
                            ],
                            "query": [
                                {
                                    "key": "username",
                                    "value": "administrator"
                                },
                                {
                                    "key": "password",
                                    "value": "xA123446"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "\u7528\u6237\u540d\u767b\u5f55-\u4e0d\u8f93\u5165\u5bc6\u7801",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "74592533-c548-4e3b-b9ef-ff970fb15ad3",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "9a72af2e-10ce-48e4-bca0-6e42b6f6d912",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a2020\",function(){\n            pm.expect(pm.response.json().code).to.eql(2020);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3afalse\",function(){\n            pm.expect(pm.response.json().success).to.eql(false);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u5bc6\u7801\u9519\u8bef'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u5bc6\u7801\u9519\u8bef');\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/user/login?username=administrator&password=",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "user",
                                "login"
                            ],
                            "query": [
                                {
                                    "key": "username",
                                    "value": "administrator"
                                },
                                {
                                    "key": "password",
                                    "value": ""
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "\u7528\u6237\u540d\u767b\u5f55-\u672a\u6ce8\u518c\u7528\u6237",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "cc0d3314-0bd2-490a-b5dc-436c6c51deb8",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "29793d08-e2cd-4094-a58c-655c03bc3457",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a2019\",function(){\n            pm.expect(pm.response.json().code).to.eql(2019);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3afalse\",function(){\n            pm.expect(pm.response.json().success).to.eql(false);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u7528\u6237\u4e0d\u5b58\u5728'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u7528\u6237\u4e0d\u5b58\u5728');\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/user/login?username=administ&password=fasdfa",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "user",
                                "login"
                            ],
                            "query": [
                                {
                                    "key": "username",
                                    "value": "administ"
                                },
                                {
                                    "key": "password",
                                    "value": "fasdfa"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "\u90ae\u7bb1\u767b\u5f55-\u6b63\u5e38",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "94f508df-5cc6-4f61-a804-42d718cfac28",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "1b500341-ef37-4139-afe3-1848337747f7",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'data': {'type': 'object'}, 'message': {'type': 'string'}, 'code': {'type': 'integer'}, 'success': {'type': 'boolean'}}, 'required': ['code', 'data', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a0\",function(){\n            pm.expect(pm.response.json().code).to.eql(0);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3atrue\",function(){\n            pm.expect(pm.response.json().success).to.eql(true);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u67e5\u8be2\u6210\u529f'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u67e5\u8be2\u6210\u529f');\n        });\n        \n        \n        pm.test(\"Body matches 'admin@mkapp.com'\", function () {\n            pm.expect(pm.response.text()).to.include(\"admin@mkapp.com\");\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/user/login?username=admin@mkapp.com&password=xA123456",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "user",
                                "login"
                            ],
                            "query": [
                                {
                                    "key": "username",
                                    "value": "admin@mkapp.com"
                                },
                                {
                                    "key": "password",
                                    "value": "xA123456"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "\u90ae\u7bb1\u767b\u5f55-\u5bc6\u7801\u9519\u8bef",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "e6dacccf-c928-41db-b380-51c180308074",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "609f3996-d604-494f-b18c-6f673282cc58",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a2020\",function(){\n            pm.expect(pm.response.json().code).to.eql(2020);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3afalse\",function(){\n            pm.expect(pm.response.json().success).to.eql(false);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u5bc6\u7801\u9519\u8bef'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u5bc6\u7801\u9519\u8bef');\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/user/login?username=admin@mkapp.com&password=xA123446",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "user",
                                "login"
                            ],
                            "query": [
                                {
                                    "key": "username",
                                    "value": "admin@mkapp.com"
                                },
                                {
                                    "key": "password",
                                    "value": "xA123446"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "\u90ae\u7bb1\u767b\u5f55-\u4e0d\u8f93\u5165\u5bc6\u7801",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "bb453660-70b0-453f-80ac-b853c8319805",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "e420e2c2-8be8-4596-9e39-3a94b2966a99",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a2020\",function(){\n            pm.expect(pm.response.json().code).to.eql(2020);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3afalse\",function(){\n            pm.expect(pm.response.json().success).to.eql(false);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u5bc6\u7801\u9519\u8bef'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u5bc6\u7801\u9519\u8bef');\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/user/login?username=admin@mkapp.com&password=",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "user",
                                "login"
                            ],
                            "query": [
                                {
                                    "key": "username",
                                    "value": "admin@mkapp.com"
                                },
                                {
                                    "key": "password",
                                    "value": ""
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "\u90ae\u7bb1\u767b\u5f55-\u672a\u6ce8\u518c\u7528\u6237",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "dea2f9bf-343b-4e22-8c3c-06135e9489f2",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "9de73c7c-3cbd-4cd7-8f43-a1f15f595f1f",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a2019\",function(){\n            pm.expect(pm.response.json().code).to.eql(2019);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3afalse\",function(){\n            pm.expect(pm.response.json().success).to.eql(false);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u7528\u6237\u4e0d\u5b58\u5728'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u7528\u6237\u4e0d\u5b58\u5728');\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/user/login?username=fdsafgds@mkapp.com&password=fasdfa",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "user",
                                "login"
                            ],
                            "query": [
                                {
                                    "key": "username",
                                    "value": "fdsafgds@mkapp.com"
                                },
                                {
                                    "key": "password",
                                    "value": "fasdfa"
                                }
                            ]
                        }
                    },
                    "response": []
                }
            ],
            "event": []
        },
        {
            "name": "\u83b7\u53d6\u7528\u6237\u4fe1\u606f",
            "item": [
                {
                    "name": "\u83b7\u53d6\u5f53\u524d\u7528\u6237",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "7443004e-745f-4d55-942b-6714684c7a06",
                                "type": "text/javascript",
                                "exec": "\r        // Example with a full fledged SDK Request\r        const my_request = {\r          url: http://localhost:8080/matdata/v1/user/login?username=administrator&password=xA123456,\r          method: \"GET\",\r          header: {\"Content-Type\": \"application/json\"},\r          body: {\r            mode: 'raw',\r            raw: \"\"\r          }\r        };\r        pm.sendRequest(my_request, function (err, res) {\r          if (err) {\r              console.log(err);\r          } else {\r                        pm.environment.set('user',res.json().data.username);\r          pm.environment.set('token',res.json().data.usertoken);\r          pm.environment.set('user_objectId',res.json().data.objectId);\r\r          }\r        });\r        \r        "
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "f6abd435-2216-4eec-8d75-2ef721aac3bd",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'data': {'type': 'object'}, 'message': {'type': 'string'}, 'code': {'type': 'integer'}, 'success': {'type': 'boolean'}}, 'required': ['code', 'data', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a0\",function(){\n            pm.expect(pm.response.json().code).to.eql(0);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3atrue\",function(){\n            pm.expect(pm.response.json().success).to.eql(true);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u67e5\u8be2\u6210\u529f'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u67e5\u8be2\u6210\u529f');\n        });\n        \n        \n        var var_test = pm.environment.get(\"user_objectId\");\n        pm.test(\"data.objectId\u5b57\u6bb5\u4e3a\"+\"\\\"\"+var_test+\"\\\"\",function(){\n            pm.expect(pm.response.json().data.objectId).to.eql(var_test);\n        });\n\n        \n        pm.test(\"Body matches 'administrator'\", function () {\n            pm.expect(pm.response.text()).to.include(\"administrator\");\n        });\n        \n        \n        var var_test = pm.environment.get(\"user_objectId\");\n        pm.test(\"Body matches \"+\"\\\"\"+var_test+\"\\\"\", function () {\n            pm.expect(pm.response.text()).to.include(var_test);\n        });\n\n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            },
                            {
                                "key": "username",
                                "value": "{{user}}",
                                "type": "text"
                            },
                            {
                                "key": "usertoken",
                                "value": "{{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/user/{{user_objectId}}",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "user",
                                "{{user_objectId}}"
                            ],
                            "query": []
                        }
                    },
                    "response": []
                },
                {
                    "name": "\u83b7\u53d6\u6240\u6709\u7528\u6237",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "8244496d-7a97-40f4-b4a6-b9dfca9638bc",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "2d64e211-fcc9-41f6-ba41-07bb7d3cdf8e",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'data': {'type': 'object'}, 'message': {'type': 'string'}, 'code': {'type': 'integer'}, 'success': {'type': 'boolean'}}, 'required': ['code', 'data', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a0\",function(){\n            pm.expect(pm.response.json().code).to.eql(0);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3atrue\",function(){\n            pm.expect(pm.response.json().success).to.eql(true);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u67e5\u8be2\u6210\u529f'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u67e5\u8be2\u6210\u529f');\n        });\n        \n        \n        pm.test(\"Body matches 'administrator'\", function () {\n            pm.expect(pm.response.text()).to.include(\"administrator\");\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            },
                            {
                                "key": "username",
                                "value": "{{user}}",
                                "type": "text"
                            },
                            {
                                "key": "usertoken",
                                "value": "{{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/user",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "user"
                            ],
                            "query": []
                        }
                    },
                    "response": []
                }
            ],
            "event": []
        },
        {
            "name": "\u65b0\u5efa\u8bbe\u5907",
            "item": [
                {
                    "name": "\u6b63\u5e38-\u5e26formconfig",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "08ad07f3-628b-4383-93cb-422b4089249e",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "4d7e811f-133a-41e9-9cb9-c6723b6bad91",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'data': {'type': 'object', 'properties': {'objectId': {'type': 'string'}, 'locktime': {'type': 'integer'}, 'createDate': {'type': 'string'}, 'updateDate': {'type': 'string'}, 'createUser': {'type': 'string'}, 'updateUser': {'type': 'string'}, 'name': {'type': 'string'}, 'isassign': {'type': 'boolean'}, 'foldername': {'type': 'string'}, 'formconfig': {'type': 'string'}}, 'required': ['createDate', 'createUser', 'foldername', 'formconfig', 'isassign', 'locktime', 'name', 'objectId', 'updateDate', 'updateUser']}, 'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'data', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a0\",function(){\n            pm.expect(pm.response.json().code).to.eql(0);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3atrue\",function(){\n            pm.expect(pm.response.json().success).to.eql(true);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u6267\u884c\u6210\u529f'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u6267\u884c\u6210\u529f');\n        });\n        \n        \n        pm.test(\"Body matches 'test instrument'\", function () {\n            pm.expect(pm.response.text()).to.include(\"test instrument\");\n        });\n        \n        \n        pm.test(\"Body matches 'component'\", function () {\n            pm.expect(pm.response.text()).to.include(\"component\");\n        });\n        \n        \n        pm.environment.set(\"instrument_objectId\", pm.response.json().data.objectId);\n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            },
                            {
                                "key": "username",
                                "value": "{{user}}",
                                "type": "text"
                            },
                            {
                                "key": "usertoken",
                                "value": "{{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\": \"test instrument\", \"foldername\": \"test instrument\", \"formconfig\": \"[{'component': 'textArea', 'editable': true, 'index': 0, 'label': '\u7b14\u8bb0', 'description': '', 'placeholder': '\u8bf7\u8f93\u5165...', 'options': [], 'options2': [], 'options3': [], 'required': false, 'validation': '/.*/', '$$hashKey': 'object:742'}, {'component': 'radio', 'editable': true, 'index': 1, 'label': '\u6750\u6599\u7c7b\u578b', 'description': '', 'placeholder': 'placeholder', 'options': ['\u91d1\u5c5e\u5757\u4f53', '\u8584\u819c', '\u751f\u7269\u6837\u54c1', '\u5176\u4ed6'], 'options2': [], 'options3': [], 'required': false, 'validation': '/.*/', '$$hashKey': 'object:684'}, {'component': 'textArea', 'editable': true, 'index': 2, 'label': '\u52a0\u5de5\u5386\u53f2', 'description': '', 'placeholder': '\u8bf7\u8f93\u5165...', 'options': [], 'options2': [], 'options3': [], 'required': false, 'validation': '/.*/', '$$hashKey': 'object:755'}, {'component': 'radio', 'editable': true, 'index': 3, 'label': '\u538b\u5934\u5f62\u72b6', 'description': '', 'placeholder': 'placeholder', 'options': ['berkovich', '\u7acb\u65b9\u9525\u89d2', '\u5706\u9525', '\u5e73\u538b\u5934', '\u5176\u4ed6'], 'options2': [], 'options3': [], 'required': false, 'validation': '/.*/', '$$hashKey': 'object:431'}, {'component': 'radio', 'editable': true, 'index': 4, 'label': '\u538b\u5934\u6750\u6599', 'description': '', 'placeholder': 'placeholder', 'options': ['\u91d1\u521a\u77f3', '\u84dd\u5b9d\u77f3', '\u94a8', '\u5176\u4ed6'], 'options2': [], 'options3': [], 'required': false, 'validation': '/.*/', '$$hashKey': 'object:382'}, {'component': 'textArea', 'editable': true, 'index': 5, 'label': '\u7ec4\u7ec7\u7279\u5f81', 'description': '', 'placeholder': '\u8bf7\u8f93\u5165...', 'options': [], 'options2': [], 'options3': [], 'required': false, 'validation': '/.*/', '$$hashKey': 'object:806'}, {'component': 'textInput', 'editable': true, 'index': 6, 'label': '\u5c48\u670d\u5f3a\u5ea6', 'description': 'MPa', 'placeholder': '\u8bf7\u8f93\u5165....', 'options': [], 'options2': [], 'options3': [], 'required': false, 'validation': '[number]', '$$hashKey': 'object:779'}, {'component': 'thirdcascapeselect', 'editable': true, 'index': 7, 'label': '\u6837\u54c1\u5c3a\u5bf8', 'description': '', 'placeholder': '\u8bf7\u8f93\u5165\u503c...', 'options': ['\u7acb\u65b9\u4f53', '\u67f1\u4f53', '\u7403\u4f53', '\u5176\u4ed6'], 'options2': {'\u9009\u9879\u4e00': ['\u4e8c\u7ea7\u9009\u9879\u4e0011', '\u4e8c\u7ea7\u9009\u9879\u4e8c11'], '\u9009\u9879\u4e8c': ['\u4e8c\u7ea7\u9009\u9879\u4e0022', '\u4e8c\u7ea7\u9009\u9879\u4e8c22'], 'null': [], '\u7acb\u65b9\u4f53': ['\u957f', '\u5bbd', '\u9ad8'], '\u67f1\u4f53': ['\u76f4\u5f84', '\u9ad8\u5ea6'], '\u7403\u4f53': ['\u534a\u5f84'], '\u5176\u4ed6': ['\u5176\u4ed6']}, 'options3': {'\u4e8c\u7ea7\u9009\u9879\u4e0011': ['\u4e09\u7ea7\u5355\u4f4d\u4e00111', '\u4e09\u7ea7\u5355\u4f4d\u4e8c111'], '\u4e8c\u7ea7\u9009\u9879\u4e8c11': ['\u4e09\u7ea7\u5355\u4f4d\u4e00112', '\u4e09\u7ea7\u5355\u4f4d\u4e8c112'], '\u4e8c\u7ea7\u9009\u9879\u4e0022': ['\u4e09\u7ea7\u5355\u4f4d\u4e00221', '\u4e09\u7ea7\u5355\u4f4d\u4e8c221'], '\u4e8c\u7ea7\u9009\u9879\u4e8c22': ['\u4e09\u7ea7\u5355\u4f4d\u4e00222', '\u4e09\u7ea7\u5355\u4f4d\u4e8c222'], 'undefined': [], '\u957f': ['nm/\u03bcm'], '\u5bbd': ['nm/\u03bcm'], '\u9ad8': ['nm/\u03bcm'], 'null': [], '\u76f4\u5f84': ['nm/\u03bcm'], '\u9ad8\u5ea6': ['nm/\u03bcm'], '\u534a\u5f84': ['nm/\u03bcm'], '\u5176\u4ed6': ['\u65e0']}, 'required': false, 'validation': '/.*/', '$$hashKey': 'object:305'}, {'component': 'thirdcascapeselect', 'editable': true, 'index': 8, 'label': '\u52a0\u8f7d\u65b9\u5f0f', 'description': '', 'placeholder': '\u8bf7\u8f93\u5165\u503c...', 'options': ['\u529b\u63a7\u5236', '\u4f4d\u79fb\u63a7\u5236'], 'options2': {'\u9009\u9879\u4e00': ['\u4e8c\u7ea7\u9009\u9879\u4e0011', '\u4e8c\u7ea7\u9009\u9879\u4e8c11'], '\u9009\u9879\u4e8c': ['\u4e8c\u7ea7\u9009\u9879\u4e0022', '\u4e8c\u7ea7\u9009\u9879\u4e8c22'], 'null': [], '\u529b\u63a7\u5236': ['\u52a0\u8f7d\u901f\u7387', '\u6700\u5927\u8f7d\u8377'], '\u4f4d\u79fb\u63a7\u5236': ['\u52a0\u8f7d\u901f\u7387', '\u6700\u5927\u8f7d\u8377']}, 'options3': {'\u4e8c\u7ea7\u9009\u9879\u4e0011': ['\u4e09\u7ea7\u5355\u4f4d\u4e00111', '\u4e09\u7ea7\u5355\u4f4d\u4e8c111'], '\u4e8c\u7ea7\u9009\u9879\u4e8c11': ['\u4e09\u7ea7\u5355\u4f4d\u4e00112', '\u4e09\u7ea7\u5355\u4f4d\u4e8c112'], '\u4e8c\u7ea7\u9009\u9879\u4e0022': ['\u4e09\u7ea7\u5355\u4f4d\u4e00221', '\u4e09\u7ea7\u5355\u4f4d\u4e8c221'], '\u4e8c\u7ea7\u9009\u9879\u4e8c22': ['\u4e09\u7ea7\u5355\u4f4d\u4e00222', '\u4e09\u7ea7\u5355\u4f4d\u4e8c222'], 'undefined': [], '\u52a0\u8f7d\u901f\u7387': ['nN'], '\u6700\u5927\u8f7d\u8377': ['nN']}, 'required': false, 'validation': '/.*/', '$$hashKey': 'object:343'}]\"}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/instrument",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "instrument"
                            ],
                            "query": []
                        }
                    },
                    "response": []
                },
                {
                    "name": "\u6b63\u5e38-\u4e0d\u5e26formconfig",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "2e8dc0af-dca3-4bb2-aadc-fc917241ab0d",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "87d9636f-1e25-4fd0-8ce1-3d29eda357ba",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'data': {'type': 'object', 'properties': {'objectId': {'type': 'string'}, 'locktime': {'type': 'integer'}, 'createDate': {'type': 'string'}, 'updateDate': {'type': 'string'}, 'createUser': {'type': 'string'}, 'updateUser': {'type': 'string'}, 'name': {'type': 'string'}, 'isassign': {'type': 'boolean'}, 'foldername': {'type': 'string'}, 'formconfig': {'type': 'string'}}, 'required': ['createDate', 'createUser', 'foldername', 'formconfig', 'isassign', 'locktime', 'name', 'objectId', 'updateDate', 'updateUser']}, 'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'data', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a0\",function(){\n            pm.expect(pm.response.json().code).to.eql(0);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3atrue\",function(){\n            pm.expect(pm.response.json().success).to.eql(true);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u6267\u884c\u6210\u529f'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u6267\u884c\u6210\u529f');\n        });\n        \n        \n        pm.test(\"Body matches 'test instrument'\", function () {\n            pm.expect(pm.response.text()).to.include(\"test instrument\");\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            },
                            {
                                "key": "username",
                                "value": "{{user}}",
                                "type": "text"
                            },
                            {
                                "key": "usertoken",
                                "value": "{{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\": \"test instrument\", \"foldername\": \"test instrument\"}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/instrument",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "instrument"
                            ],
                            "query": []
                        }
                    },
                    "response": []
                }
            ],
            "event": []
        },
        {
            "name": "\u83b7\u53d6\u8bbe\u5907",
            "item": [
                {
                    "name": "\u83b7\u53d6\u6307\u5b9a\u8bbe\u5907",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "475ede55-7967-42d4-be26-1e7f1f415803",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "b705feac-b832-4329-acfd-2d637e63f491",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'data': {'type': 'object', 'properties': {'objectId': {'type': 'string'}, 'locktime': {'type': 'integer'}, 'createDate': {'type': 'string'}, 'updateDate': {'type': 'string'}, 'createUser': {'type': 'string'}, 'updateUser': {'type': 'string'}, 'name': {'type': 'string'}, 'isassign': {'type': 'boolean'}, 'foldername': {'type': 'string'}, 'formconfig': {'type': 'string'}}, 'required': ['createDate', 'createUser', 'foldername', 'formconfig', 'isassign', 'locktime', 'name', 'objectId', 'updateDate', 'updateUser']}, 'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'data', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a0\",function(){\n            pm.expect(pm.response.json().code).to.eql(0);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3atrue\",function(){\n            pm.expect(pm.response.json().success).to.eql(true);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u67e5\u8be2\u6210\u529f'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u67e5\u8be2\u6210\u529f');\n        });\n        \n        \n        pm.test(\"Body matches 'test instrument'\", function () {\n            pm.expect(pm.response.text()).to.include(\"test instrument\");\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            },
                            {
                                "key": "username",
                                "value": "{{user}}",
                                "type": "text"
                            },
                            {
                                "key": "usertoken",
                                "value": "{{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/instrument/{{instrument_objectId}}",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "instrument",
                                "{{instrument_objectId}}"
                            ],
                            "query": []
                        }
                    },
                    "response": []
                },
                {
                    "name": "\u83b7\u53d6\u6240\u6709\u8bbe\u5907",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "27f38606-64f6-44d2-bf86-9725f1aa5438",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "f9fd4554-4a75-46a9-b8d8-e3185c8446e0",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'data': {'type': 'object', 'properties': {'count': {'type': 'integer'}, 'results': {'type': 'array'}}, 'required': ['count', 'results']}, 'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'data', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a0\",function(){\n            pm.expect(pm.response.json().code).to.eql(0);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3atrue\",function(){\n            pm.expect(pm.response.json().success).to.eql(true);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u67e5\u8be2\u6210\u529f'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u67e5\u8be2\u6210\u529f');\n        });\n        \n        \n        pm.test(\"Body matches 'test instrument'\", function () {\n            pm.expect(pm.response.text()).to.include(\"test instrument\");\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            },
                            {
                                "key": "username",
                                "value": "{{user}}",
                                "type": "text"
                            },
                            {
                                "key": "usertoken",
                                "value": "{{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/instrument",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "instrument"
                            ],
                            "query": []
                        }
                    },
                    "response": []
                }
            ],
            "event": []
        },
        {
            "name": "\u65b0\u589e\u5b9e\u9a8c\u5ba4",
            "item": [
                {
                    "name": "\u6b63\u5e38",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "7b2da33f-c441-441f-a2c6-6dc9240ad1e6",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "d3e0c36a-578a-4267-97b5-b7fa44c99ef9",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'data': {'type': 'object', 'properties': {'objectId': {'type': 'string'}, 'locktime': {'type': 'integer'}, 'createDate': {'type': 'string'}, 'updateDate': {'type': 'string'}, 'createUser': {'type': 'string'}, 'updateUser': {'type': 'string'}, 'name': {'type': 'string'}, 'foldername': {'type': 'string'}, 'children': {'type': 'array'}, 'instruments': {'type': 'array'}}, 'required': ['children', 'createDate', 'createUser', 'foldername', 'instruments', 'locktime', 'name', 'objectId', 'updateDate', 'updateUser']}, 'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'data', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a0\",function(){\n            pm.expect(pm.response.json().code).to.eql(0);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3atrue\",function(){\n            pm.expect(pm.response.json().success).to.eql(true);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u6267\u884c\u6210\u529f'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u6267\u884c\u6210\u529f');\n        });\n        \n        \n        pm.test(\"Body matches 'test laboratory'\", function () {\n            pm.expect(pm.response.text()).to.include(\"test laboratory\");\n        });\n        \n        \n        pm.environment.set(\"laboratory_objectId\", pm.response.json().data.objectId);\n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            },
                            {
                                "key": "username",
                                "value": "{{user}}",
                                "type": "text"
                            },
                            {
                                "key": "usertoken",
                                "value": "{{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\": \"test laboratory\", \"foldername\": \"test laboratory\", \"instruments\": [\"{{instrument_objectId}}\"]}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/laboratory",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "laboratory"
                            ],
                            "query": []
                        }
                    },
                    "response": []
                },
                {
                    "name": "\u7a7a\u8bbe\u5907\u5217\u8868",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "ee44b326-ef4e-4796-bdf7-adaff4a3b4b8",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "5d157f43-1cde-45f8-a778-184e9f2f0617",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'data': {'type': 'object', 'properties': {'objectId': {'type': 'string'}, 'locktime': {'type': 'integer'}, 'createDate': {'type': 'string'}, 'updateDate': {'type': 'string'}, 'createUser': {'type': 'string'}, 'updateUser': {'type': 'string'}, 'name': {'type': 'string'}, 'foldername': {'type': 'string'}, 'children': {'type': 'array'}, 'instruments': {'type': 'array'}}, 'required': ['children', 'createDate', 'createUser', 'foldername', 'instruments', 'locktime', 'name', 'objectId', 'updateDate', 'updateUser']}, 'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'data', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a0\",function(){\n            pm.expect(pm.response.json().code).to.eql(0);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3atrue\",function(){\n            pm.expect(pm.response.json().success).to.eql(true);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u6267\u884c\u6210\u529f'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u6267\u884c\u6210\u529f');\n        });\n        \n        \n        pm.test(\"Body matches 'test laboratory'\", function () {\n            pm.expect(pm.response.text()).to.include(\"test laboratory\");\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            },
                            {
                                "key": "username",
                                "value": "{{user}}",
                                "type": "text"
                            },
                            {
                                "key": "usertoken",
                                "value": "{{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\": \"test laboratory\", \"foldername\": \"test laboratory\", \"instruments\": []}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/laboratory",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "laboratory"
                            ],
                            "query": []
                        }
                    },
                    "response": []
                },
                {
                    "name": "\u8bbe\u5907\u4e0d\u5b58\u5728",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "b230dd83-c61a-4ad4-af5d-7bccf20a613f",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "15323846-5443-45b3-964a-b413a44fdcde",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'data': {'type': 'object', 'properties': {'objectId': {'type': 'string'}, 'locktime': {'type': 'integer'}, 'createDate': {'type': 'string'}, 'updateDate': {'type': 'string'}, 'createUser': {'type': 'string'}, 'updateUser': {'type': 'string'}, 'name': {'type': 'string'}, 'foldername': {'type': 'string'}, 'children': {'type': 'array'}, 'instruments': {'type': 'array'}}, 'required': ['children', 'createDate', 'createUser', 'foldername', 'instruments', 'locktime', 'name', 'objectId', 'updateDate', 'updateUser']}, 'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'data', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a0\",function(){\n            pm.expect(pm.response.json().code).to.eql(0);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3atrue\",function(){\n            pm.expect(pm.response.json().success).to.eql(true);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u6267\u884c\u6210\u529f'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u6267\u884c\u6210\u529f');\n        });\n        \n        \n        pm.test(\"Body matches 'test laboratory'\", function () {\n            pm.expect(pm.response.text()).to.include(\"test laboratory\");\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            },
                            {
                                "key": "username",
                                "value": "{{user}}",
                                "type": "text"
                            },
                            {
                                "key": "usertoken",
                                "value": "{{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\": \"test laboratory\", \"foldername\": \"test laboratory\", \"instruments\": [\"5c40b30a45581e2dce854e22d\"]}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/laboratory",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "laboratory"
                            ],
                            "query": []
                        }
                    },
                    "response": []
                }
            ],
            "event": []
        },
        {
            "name": "\u83b7\u53d6\u5b9e\u9a8c\u5ba4",
            "item": [
                {
                    "name": "\u83b7\u53d6\u6307\u5b9a\u5b9e\u9a8c\u5ba4",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "986b84b0-edca-477f-8762-716dd8c3586f",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "cb5eb3e2-5d22-4e1d-81df-23159ccbe9fb",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'data': {'type': 'object', 'properties': {'objectId': {'type': 'string'}, 'locktime': {'type': 'integer'}, 'createDate': {'type': 'string'}, 'updateDate': {'type': 'string'}, 'createUser': {'type': 'string'}, 'updateUser': {'type': 'string'}, 'name': {'type': 'string'}, 'foldername': {'type': 'string'}, 'children': {'type': 'array'}, 'instruments': {'type': 'array'}}, 'required': ['children', 'createDate', 'createUser', 'foldername', 'instruments', 'locktime', 'name', 'objectId', 'updateDate', 'updateUser']}, 'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'data', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a0\",function(){\n            pm.expect(pm.response.json().code).to.eql(0);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3atrue\",function(){\n            pm.expect(pm.response.json().success).to.eql(true);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u67e5\u8be2\u6210\u529f'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u67e5\u8be2\u6210\u529f');\n        });\n        \n        \n        pm.test(\"Body matches 'test laboratory'\", function () {\n            pm.expect(pm.response.text()).to.include(\"test laboratory\");\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            },
                            {
                                "key": "username",
                                "value": "{{user}}",
                                "type": "text"
                            },
                            {
                                "key": "usertoken",
                                "value": "{{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/laboratory/{{laboratory_objectId}}",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "laboratory",
                                "{{laboratory_objectId}}"
                            ],
                            "query": []
                        }
                    },
                    "response": []
                },
                {
                    "name": "\u83b7\u53d6\u6240\u6709\u5b9e\u9a8c\u5ba4",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "923ceb93-69af-4f7f-8fda-210d9a576bb6",
                                "type": "text/javascript",
                                "exec": ""
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "9d21ca04-2cb8-4b55-8593-784f245fbfa4",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'data': {'type': 'object', 'properties': {'count': {'type': 'integer'}, 'results': {'type': 'array'}}, 'required': ['count', 'results']}, 'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'data', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a0\",function(){\n            pm.expect(pm.response.json().code).to.eql(0);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3atrue\",function(){\n            pm.expect(pm.response.json().success).to.eql(true);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u67e5\u8be2\u6210\u529f'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u67e5\u8be2\u6210\u529f');\n        });\n        \n        \n        pm.test(\"Body matches 'test laboratory'\", function () {\n            pm.expect(pm.response.text()).to.include(\"test laboratory\");\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            },
                            {
                                "key": "username",
                                "value": "{{user}}",
                                "type": "text"
                            },
                            {
                                "key": "usertoken",
                                "value": "{{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/laboratory",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "laboratory"
                            ],
                            "query": []
                        }
                    },
                    "response": []
                }
            ],
            "event": []
        },
        {
            "name": "\u66f4\u65b0\u8bbe\u5907",
            "item": [
                {
                    "name": "\u66f4\u65b0\u6307\u5b9a\u8bbe\u5907",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "ab4517aa-8e3c-4e7a-a5ff-4cb84d300d29",
                                "type": "text/javascript",
                                "exec": "var instrument_objectId=pm.environment.get(\"instrument_objectId\");\rvar user=pm.environment.get(\"user\");\rvar token=pm.environment.get(\"token\");\r\r        // Example with a full fledged SDK Request\r        const my_request = {\r          url: \"http://localhost:8080/matdata/v1/instrument/\"+instrument_objectId,\r          method: \"GET\",\r          header: {\"Content-Type\": \"application/json\", \"username\": user, \"usertoken\": token},\r          body: {\r            mode: 'raw',\r            raw: \"\"\r          }\r        };\r        pm.sendRequest(my_request, function (err, res) {\r          if (err) {\r              console.log(err);\r          } else {\r                        pm.environment.set('update_instrument',res.json().data);\r\r          }\r        });\r        \r        var update_json=JSON.parse(pm.environment.get(\"update_json\"));\rupdate_json.name=\"update instrument\";\rupdate_json.foldername=\"update instrument\";\rpm.environment.set(\"update_instrument\", \"JSON.stringify(update_json)\");\r"
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "e0b43834-e551-40a1-9b42-bdb737405841",
                                "type": "text/javascript",
                                "exec": "\n        pm.test(\"Status code is 200\", function () {\n            pm.response.to.have.status(200);\n        });        \n        \n        pm.test('\u8fd4\u56dejson\u683c\u5f0f\u6570\u636e', () => {\n            pm.response.to.be.json;\n            pm.response.to.have.header('Content-Type', 'application/json;charset=UTF-8');\n        });  \n        \n        \n        pm.test('json\u6570\u636e\u6a21\u5f0f\u6b63\u786e', function() {\n            var result=tv4.validateResult(JSON.parse(responseBody), {'$schema': 'http://json-schema.org/schema#', 'type': 'object', 'properties': {'data': {'type': 'object', 'properties': {'objectId': {'type': 'string'}, 'locktime': {'type': 'integer'}, 'createDate': {'type': 'string'}, 'updateDate': {'type': 'string'}, 'createUser': {'type': 'string'}, 'updateUser': {'type': 'string'}, 'name': {'type': 'string'}, 'foldername': {'type': 'string'}, 'children': {'type': 'array'}, 'instruments': {'type': 'array'}}, 'required': ['children', 'createDate', 'createUser', 'foldername', 'instruments', 'locktime', 'name', 'objectId', 'updateDate', 'updateUser']}, 'message': {'type': 'string'}, 'success': {'type': 'boolean'}, 'code': {'type': 'integer'}}, 'required': ['code', 'data', 'message', 'success']});\n            if(!result.valid){\n                console.log(result);\n            }\n            pm.expect(result.valid).to.be.true;\n        });\n        \n        pm.test(\"code\u5b57\u6bb5\u4e3a0\",function(){\n            pm.expect(pm.response.json().code).to.eql(0);\n        });\n        \n        \n        pm.test(\"success\u5b57\u6bb5\u4e3atrue\",function(){\n            pm.expect(pm.response.json().success).to.eql(true);\n        });\n        \n        \n        pm.test(\"message\u5b57\u6bb5\u4e3a'\u67e5\u8be2\u6210\u529f'\",function(){\n            pm.expect(pm.response.json().message).to.eql('\u67e5\u8be2\u6210\u529f');\n        });\n        \n        \n        pm.test(\"Body matches 'update instrument'\", function () {\n            pm.expect(pm.response.text()).to.include(\"update instrument\");\n        });\n        \n        "
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "name": "Content-Type",
                                "type": "text"
                            },
                            {
                                "key": "username",
                                "value": "{{user}}",
                                "type": "text"
                            },
                            {
                                "key": "usertoken",
                                "value": "{{token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{{update_instrument}}"
                        },
                        "url": {
                            "raw": "http://localhost:8080/matdata/v1/instrument/{{instrument_objectId}}",
                            "protocol": "http",
                            "host": [
                                "localhost:8080"
                            ],
                            "path": [
                                "matdata",
                                "v1",
                                "instrument",
                                "{{instrument_objectId}}"
                            ],
                            "query": []
                        }
                    },
                    "response": []
                }
            ],
            "event": []
        }
    ],
    "event": []
}